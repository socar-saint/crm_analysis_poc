[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "crm-analysis-agent"
version = "1.0.0"
description = "Advanced AI-Powered CRM Campaign Performance Analysis & Optimization Platform"
readme = "README.md"
license = {text = "Proprietary"}
authors = [
    {name = "saintwo", email = "saintwo@example.com"},
]
maintainers = [
    {name = "saintwo", email = "saintwo@example.com"},
]
keywords = [
    "crm",
    "campaign-analysis",
    "ai",
    "llm",
    "marketing-optimization",
    "business-intelligence",
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.11"
dependencies = [
    "google-adk>=0.1.0",
    "litellm>=1.0.0",
    "pandas>=2.0.0",
    "numpy>=1.24.0",
    "scipy>=1.10.0",
    "scikit-learn>=1.3.0",
    "statsmodels>=0.14.0",
    "matplotlib>=3.7.0",
    "seaborn>=0.12.0",
    "plotly>=5.15.0",
    "jinja2>=3.1.0",
    "beautifulsoup4>=4.12.0",
    "lxml>=4.9.0",
    "python-dotenv>=1.0.0",
    "pydantic>=2.0.0",
    "typing-extensions>=4.5.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.0.0",
]
performance = [
    "uvloop>=0.17.0; sys_platform != 'win32'",
    "uvloop>=0.17.0; sys_platform == 'win32' and python_version >= '3.8'",
]
llm = [
    "openai>=1.0.0",
    "anthropic>=0.3.0",
]

[project.urls]
Homepage = "https://github.com/saintwo/crm-analysis-agent"
Documentation = "https://github.com/saintwo/crm-analysis-agent/blob/main/README.md"
Repository = "https://github.com/saintwo/crm-analysis-agent.git"
Issues = "https://github.com/saintwo/crm-analysis-agent/issues"

[project.scripts]
crm-analyze = "main:main"

[tool.hatch.build.targets.wheel]
packages = ["config", "core", "agents"]

[tool.hatch.build.targets.sdist]
include = [
    "/config",
    "/core", 
    "/agents",
    "/data",
    "/outputs",
    "main.py",
    "README.md",
    "INSTALLATION.md",
    "requirements.txt",
]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["config", "core", "agents"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "google.*",
    "litellm.*",
    "plotly.*",
    "seaborn.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = [
    "tests",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["config", "core", "agents"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.ruff]
target-version = "py311"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*" = ["B011"]

[tool.pre-commit]
repos = [
    {repo = "https://github.com/psf/black", rev = "22.3.0", hooks = [{id = "black", language_version = "python3"}]},
    {repo = "https://github.com/pycqa/flake8", rev = "4.0.1", hooks = [{id = "flake8", additional_dependencies = ["flake8-docstrings"]}]},
    {repo = "https://github.com/pre-commit/mirrors-mypy", rev = "v0.950", hooks = [{id = "mypy", additional_dependencies = ["types-all"]}]},
    {repo = "https://github.com/pre-commit/pre-commit-hooks", rev = "v4.2.0", hooks = [
        {id = "trailing-whitespace"},
        {id = "end-of-file-fixer"},
        {id = "check-yaml"},
        {id = "check-added-large-files"}
    ]},
]
